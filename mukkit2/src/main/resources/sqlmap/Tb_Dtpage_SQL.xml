<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵핑될 DAO 인터페이스의 Full name 을 줍니다. -->
<mapper namespace="com.tistory.pentode.service.dao.DtpageDAO">

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 boardVO 는 mybatis-confg.xml 에 Alias 되어 
		있습니다. -->
	<select id="selectDtpageList" resultType="MainVO">
		SELECT *
		<!-- STOREID,
		IMG,
		STORENAME,
		LOCATION,
		ADDRESS,
		TRANS,
		STAR,
		FOODTYPE,
		PRICE,
		OPENHOURS,
		HOLIDAY,
		CONTACT,
		DELIVERY -->
		FROM
		STORE_TBL
		where
		storeid = #{storeid}
	</select>
	
	<select id="selectFeedbackList" resultType="FeedbackVO">
		SELECT
			*
		FROM
			Feedback_TBL
		where
			storeid = #{storeid}
		order by regdate
	</select>

	<select id="listPage" resultType="FeedbackVO" parameterType="Criteria">
    select reviewid, storeid, title, review, memberid, regdate, taste, costef, service, imgname, thumbimg
       from (
           select reviewid, storeid, title, review, memberid, regdate, taste, costef, service, imgname, thumbimg,
               row_number() over(order by reviewid desc) as rNum
           from feedback_tbl
     ) mb
    where rNum between #{rowStart} and #{rowEnd}
        order by reviewid desc
</select>


	<select id="countPaging" resultType="int">
 <![CDATA[
	 select 
   		count(*)
 	from 
  		feedback_tbl
 	where 
   		reviewid > 0 and storeid = #{storeid}
 ]]>
	</select>


	<!-- 댓글 작성 -->
	<insert id="commentInsert">
		insert into review_tbl
			(reviewid,
			memberid,
			feedbackid,
			storeid,
			reportreason,
			reportdate)
		values
			(#{reviewid},
			#{memberid},
			review_id_seq.nextval,
			#{storeid},
			#{reportreason},
			to_date(sysdate, 'yyyy/mm/dd'))
	</insert>

	<!-- 댓글 리스트 -->
	<select id="commentList" resultType="ReviewVO">
		select
			memberid, reviewid, storeid, reportreason, reportdate
		from 
			review_tbl
		where 
			storeid = #{storeid} and reviewid = #{reviewid}
	</select>

</mapper>
